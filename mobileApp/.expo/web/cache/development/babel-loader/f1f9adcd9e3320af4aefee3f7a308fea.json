{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ApiEngine from \"./comm/ApiEngine\";\nimport { Camera } from 'expo-camera';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dataEngineStatus: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"cancelApi\",\n    value: function cancelApi() {\n      this.setState({\n        dataEngineStatus: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        dataEngineStatus: 'test-' + new Date()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Camera.isAvailableAsync()) {} else {}\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: 'blue',\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  containera: {\n    flex: 1,\n    zIndex: 1,\n    color: 'blue',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/johnxu/suez.bid/mobileApp/App.js"],"names":["StatusBar","React","Component","useState","useEffect","ApiEngine","Camera","App","props","state","dataEngineStatus","setState","Date","isAvailableAsync","styles","StyleSheet","create","container","flex","color","backgroundColor","alignItems","justifyContent","containera","zIndex"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAuD,OAAvD;;;;;AAEA,OAAOC,SAAP;AAEA,SAASC,MAAT,QAAuB,aAAvB;;IAGMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,gBAAgB,EAAC;AAAnB,KAAb;AAFiB;AAMlB;;;;WAED,qBAAY;AACV,WAAKC,QAAL,CAAc;AAACD,QAAAA,gBAAgB,EAAC;AAAlB,OAAd;AACD;;;WACD,6BAAoB;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA,gBAAgB,EAAC,UAAU,IAAIE,IAAJ;AAA5B,OAAd;AAED;;;WACD,kBAAS;AACP,UAAKN,MAAM,CAACO,gBAAP,EAAL,EAAgC,CAC/B,CADD,MACO,CAGN;AAKF;;;;EA1BgBX,S;;AA4BnB,eAAeK,GAAf;AAEA,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,eAAe,EAAE,aAHR;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/BC,EAAAA,UAAU,EAAE;AACVL,IAAAA,IAAI,EAAE,CADI;AAEVM,IAAAA,MAAM,EAAE,CAFE;AAGVL,IAAAA,KAAK,EAAE,MAHG;AAIVC,IAAAA,eAAe,EAAE,MAJP;AAKVC,IAAAA,UAAU,EAAE,QALF;AAMVC,IAAAA,cAAc,EAAE;AANN;AARmB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component, useState, useEffect }  from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport ApiEngine  from './comm/ApiEngine';\n\nimport { Camera } from 'expo-camera';\n\n\nclass App  extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { dataEngineStatus:false };\n\n\n    \n  }\n  \n  cancelApi() {\n    this.setState({dataEngineStatus:false});\n  }\n  componentDidMount() {\n    this.setState({dataEngineStatus:'test-' + new Date()});\n    \n  }\n  render() {\n    if ( Camera.isAvailableAsync()) {\n    } else {\n\n\n    }\n  //  const [hasPermission, setHasPermission] = useState(null);\n  //  const [type, setType] = useState(Camera.Constants.Type.back);\n\n\n  }\n}\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: 'blue',\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  containera: {\n    flex: 1,\n    zIndex: 1,\n    color: 'blue',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}