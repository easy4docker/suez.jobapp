{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/johnxu/suez.bid/mobileApp/comm/QRCodeScanner.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport QRCodeScanner from 'react-native-qrcode-scanner';\nimport { RNCamera } from 'react-native-camera';\n\nvar ScanScreen = function (_Component) {\n  _inherits(ScanScreen, _Component);\n\n  var _super = _createSuper(ScanScreen);\n\n  function ScanScreen() {\n    var _this;\n\n    _classCallCheck(this, ScanScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onSuccess = function (e) {\n      Linking.openURL(e.data).catch(function (err) {\n        return console.error('An error occured', err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScanScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(QRCodeScanner, {\n        onRead: this.onSuccess,\n        flashMode: RNCamera.Constants.FlashMode.torch,\n        topContent: React.createElement(Text, {\n          style: styles.centerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, \"Go to\", ' ', React.createElement(Text, {\n          style: styles.textBold,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, \"wikipedia.org/wiki/QR_code\"), \" on your computer and scan the QR code.\"),\n        bottomContent: React.createElement(TouchableOpacity, {\n          style: styles.buttonTouchable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, \"OK. Got it!\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ScanScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centerText: {\n    flex: 1,\n    fontSize: 18,\n    padding: 32,\n    color: '#777'\n  },\n  textBold: {\n    fontWeight: '500',\n    color: '#000'\n  },\n  buttonText: {\n    fontSize: 21,\n    color: 'rgb(0,122,255)'\n  },\n  buttonTouchable: {\n    padding: 16\n  }\n});\nAppRegistry.registerComponent('default', function () {\n  return ScanScreen;\n});","map":{"version":3,"sources":["/Users/johnxu/suez.bid/mobileApp/comm/QRCodeScanner.js"],"names":["React","Component","QRCodeScanner","RNCamera","ScanScreen","onSuccess","e","Linking","openURL","data","catch","err","console","error","Constants","FlashMode","torch","styles","centerText","textBold","buttonTouchable","buttonText","StyleSheet","create","flex","fontSize","padding","color","fontWeight","AppRegistry","registerComponent"],"mappings":"AAAA;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAUA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;IAEMC,U;;;;;;;;;;;;;;;;UACJC,S,GAAY,UAAAC,CAAC,EAAI;AACfC,MAAAA,OAAO,CAACC,OAAR,CAAgBF,CAAC,CAACG,IAAlB,EAAwBC,KAAxB,CAA8B,UAAAC,GAAG;AAAA,eAC/BC,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCF,GAAlC,CAD+B;AAAA,OAAjC;AAGD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,aAAD;AACE,QAAA,MAAM,EAAE,KAAKN,SADf;AAEE,QAAA,SAAS,EAAEF,QAAQ,CAACW,SAAT,CAAmBC,SAAnB,CAA6BC,KAF1C;AAGE,QAAA,UAAU,EACR,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,GADR,EAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFF,4CAJJ;AAUE,QAAA,aAAa,EACX,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEF,MAAM,CAACG,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAkBD;;;;EA1BsBpB,S;;AA6BzB,IAAMgB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,UAAU,EAAE;AACVM,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,OAAO,EAAE,EAHC;AAIVC,IAAAA,KAAK,EAAE;AAJG,GADmB;AAO/BR,EAAAA,QAAQ,EAAE;AACRS,IAAAA,UAAU,EAAE,KADJ;AAERD,IAAAA,KAAK,EAAE;AAFC,GAPqB;AAW/BN,EAAAA,UAAU,EAAE;AACVI,IAAAA,QAAQ,EAAE,EADA;AAEVE,IAAAA,KAAK,EAAE;AAFG,GAXmB;AAe/BP,EAAAA,eAAe,EAAE;AACfM,IAAAA,OAAO,EAAE;AADM;AAfc,CAAlB,CAAf;AAoBAG,WAAW,CAACC,iBAAZ,CAA8B,SAA9B,EAAyC;AAAA,SAAM1B,UAAN;AAAA,CAAzC","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\n\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  Linking\n} from 'react-native';\n\nimport QRCodeScanner from 'react-native-qrcode-scanner';\nimport { RNCamera } from 'react-native-camera';\n\nclass ScanScreen extends Component {\n  onSuccess = e => {\n    Linking.openURL(e.data).catch(err =>\n      console.error('An error occured', err)\n    );\n  };\n\n  render() {\n    return (\n      <QRCodeScanner\n        onRead={this.onSuccess}\n        flashMode={RNCamera.Constants.FlashMode.torch}\n        topContent={\n          <Text style={styles.centerText}>\n            Go to{' '}\n            <Text style={styles.textBold}>wikipedia.org/wiki/QR_code</Text> on\n            your computer and scan the QR code.\n          </Text>\n        }\n        bottomContent={\n          <TouchableOpacity style={styles.buttonTouchable}>\n            <Text style={styles.buttonText}>OK. Got it!</Text>\n          </TouchableOpacity>\n        }\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  centerText: {\n    flex: 1,\n    fontSize: 18,\n    padding: 32,\n    color: '#777'\n  },\n  textBold: {\n    fontWeight: '500',\n    color: '#000'\n  },\n  buttonText: {\n    fontSize: 21,\n    color: 'rgb(0,122,255)'\n  },\n  buttonTouchable: {\n    padding: 16\n  }\n});\n\nAppRegistry.registerComponent('default', () => ScanScreen);\n"]},"metadata":{},"sourceType":"module"}